CREATE DATABASE Familia
ON PRIMARY 
(NAME = 'familia_data',
FILENAME = 'C:\BASE DE DATOS II\DB_FAMILIA\familia_data.Mdf',
SIZE = 3Mb,
MAXSIZE = 30Mb,
FILEGROWTH = 5Mb)
LOG ON 
(NAME = 'familia_log',
FILENAME = 'C:\BASE DE DATOS II\DB_FAMILIA\familia_log.Ldf',
SIZE = 3Mb,
MAXSIZE = 10Mb,
FILEGROWTH = 1Mb)
GO

USE Familia;
GO

-- TABLA PADRE
CREATE TABLE TPADRE (
	ID_PADRE CHAR(4) NOT NULL PRIMARY KEY,
	DNI CHAR(8),
	NOMBRE VARCHAR(25),
	APELLIDO VARCHAR(30),
	DIRECCION VARCHAR(35),
	SEXO CHAR(1),
	SBRUTO MONEY,
	DSCTO MONEY,
	SNETO MONEY,
);
GO

-- TABLA ESTUDIANTE
CREATE TABLE TESTUDIANTE (
	ID_ESTUDIANTE CHAR(4) NOT NULL PRIMARY KEY,
	ID_PADRE CHAR(4),
	NOMBRE VARCHAR(25),
	APELLIDO VARCHAR(35),
	DIRECCION VARCHAR(35),
	EDAD INT,
	SEXO CHAR(1),
	FOREIGN KEY(ID_PADRE) REFERENCES TPADRE(ID_PADRE)
);
GO

-- INSERTANDO VALORES A TABLA PADRE
INSERT INTO TPADRE	VALUES('001', '37289878', 'fany', 'achull', 'av.nu�ez', 'F', '2000', '150', '1850');
INSERT INTO TPADRE	VALUES('002', '15334455', 'zacarias', 'salazar', 'jr.lima', 'M', '1300', '70', '1230');
INSERT INTO TPADRE	VALUES('003', '04413413', 'alexander', 'saldivar', 'jr.cajamarca', 'M', '1800', '90', '1710');
INSERT INTO TPADRE	VALUES('004', '03341321', 'nelson', 'rojas', 'av.prado alto', 'M', '2500', '200', '2300');
INSERT INTO TPADRE	VALUES('005', '02432410', 'nelson', 'salinas', 'av.venezuela', 'M', '1600', '80', '1520');
INSERT INTO TPADRE	VALUES('006', '04141379', 'fany', 'barreto', 'jr.los pinos', 'F', '3000', '300', '2700');
INSERT INTO TPADRE	VALUES('007', '47893885', 'jeny', 'aveda�o', 'jr.cusco', 'F', '1500', '200', '1300');
GO

-- INSERTANDO VALORES A TABLA ESTUDIANTE
INSERT INTO TESTUDIANTE	VALUES('001', '001', 'oliver', 'panebra', 'av.abancay', 20, 'M');
INSERT INTO TESTUDIANTE	VALUES('002', '002', 'raul', 'arevalo', 'av.tamburco', 21, 'M');
INSERT INTO TESTUDIANTE	VALUES('003', '003', 'fernando', 'quispe', 'jr.ecuador', 20, 'M');
INSERT INTO TESTUDIANTE	VALUES('004', '004', 'federico', 'cuaresma', 'jr.arequipa', 18,'M');
INSERT INTO TESTUDIANTE	VALUES('005', '005', 'lucia', 'moreano', 'av.fonavi', 17, 'F');
INSERT INTO TESTUDIANTE	VALUES('006', '006', 'rodolfo', 'perez', 'jr.apurimac', 20, 'M');
INSERT INTO TESTUDIANTE	VALUES('007', '007', 'gabriel', 'apolino', 'jr.aviacion', 19, 'M');
GO

/*1.- USO DE LA CLAUSULA SELECT 
A) LISTAR A LOS PADRES DE LA TABLA PADRE POR SU NOMBRE, APELLIDO*/
SELECT NOMBRE, APELLIDO
FROM TPADRE;
GO

-- B) LISTAR A LOS PADRES QYE GANAN UN SUELDO BRUTO MAYOR A 1800
SELECT * FROM TPADRE
WHERE SBRUTO > 1800;
GO

-- C) LISTAR A LOS PADRES QUE TENGAN UN DESCUENTO MAYO RO IGUAL A 80
SELECT * FROM TPADRE
WHERE DSCTO >= 80;
GO

/* D) EN AQUELLOS CASOS DONDE SE QUIERE FORZAR LA ELIMINACION DE DUPLICADOS SE 
INSERTARA LA PALABRA "DISTINCT" DESPUES DE LA CLAUSULA "SELECT"*/
SELECT DISTINCT NOMBRE FROM TPADRE;
GO

/* E) ES POSIBLE ES�PECIFICAR EXPLICITAMENTE QUE NO ELIMINEN LOS DUPICADOS UTILIZANDO "ALI"*/
SELECT ALL NOMBRE FROM TPADRE;
GO
-- EL SIMBOLO �DENOTA TODOS LOS ATRIBUTOS
SELECT * FROM TPADRE;
SELECT * FROM TESTUDIANTE;
GO

/* F) LA CLAUSULA "SELECT" PUEDE CONTENER EXPRESIONES ARITMETICAS QUE INCLUTE OPERADORES MATEMATICOS
"+, .M *, *" OPERANDO SOBRE CONSTANTES O ATRIBUTOS DE LA TUPLA.*/
SELECT NOMBRE, APELLIDO, DSCTO*10 AS 'DESCUENTO * 10' FROM TPADRE;
GO

/*2.- CLAUSULA WHERE
A) USA TAMBIEN AND, OR, NOT Y OPERADORES DE COMPARACION >,<, >=, <=, <>*/
SELECT NOMBRE, APELLIDO, SBRUTO+SNETO AS 'SUELDO TOTAL' FROM TPADRE
WHERE SEXO = 'M';
GO

-- B) HACER UNA CONSULTA PARA LISTAR LAS TUPLAS CUYO SALARIO BRUTO SE ENCUENTE ENTRE 1300 Y 1800
SELECT * FROM TPADRE
WHERE (SBRUTO >= 1300) AND (SBRUTO <= 1800);
GO
SELECT * FROM TPADRE
WHERE SBRUTO BETWEEN 1300 AND 1800;
GO

/*3.- CLAUSULA FROM
A) PARA EVITAR AMBIGUEDADES EN LOS CASOS EN QUE UN ATRIBUTO APARECE EN EL ESQUEMA EN MAS DE UNA RELACION*/
SELECT TPADRE.NOMBRE, TESTUDIANTE.NOMBRE 
FROM TPADRE, TESTUDIANTE
WHERE TPADRE.ID_PADRE = TESTUDIANTE.ID_PADRE;
GO

/*B) REALIZAR UNA CONSULTA QUE PERMITA SELECCIONAR TODOS LOS NOMBRES Y APELLIDOS DE LOS PADRES QUE 
TENGAN ESTUDIANTES EN EDAD DE 19 Y 20*/
SELECT TPADRE.NOMBRE,TPADRE.APELLIDO, TESTUDIANTE.EDAD
FROM TPADRE, TESTUDIANTE
WHERE TESTUDIANTE.EDAD BETWEEN 19 AND 20;
GO

/*C) REALIZAR UNA CONSULTA QUE TE PERMITA MOSTRAR LOS DATOS DE LOS ESTUDIANTES DE SEXO MASCULINO < 19 
AÑOS CUYOS PADRES SEAN DE SEXO MASCULINO*/
SELECT TESTUDIANTE.ID_ESTUDIANTE, TESTUDIANTE.NOMBRE, TESTUDIANTE.APELLIDO, TESTUDIANTE.EDAD, TESTUDIANTE.SEXO 
FROM TESTUDIANTE, TPADRE
WHERE (TESTUDIANTE.SEXO = 'M')
AND (TESTUDIANTE.EDAD < 19)
AND (TPADRE.SEXO = 'M') AND (TPADRE.ID_PADRE = TESTUDIANTE.ID_PADRE);
GO

/* 4.- OPERACIÓN DE NOMBRAMIENTO*/
SELECT NOMBRE, APELLIDO, DSCTO*10 AS'DESCUENTO * 10'
FROM TPADRE;

/* 5.- OPERADORES SOBRE CADENA
A) BUSCAR LOS NOMBRE DE LAS PERSONAS CON NOMBRE "ALEXANDER"*/
SELECT * FROM TPADRE
WHERE NOMBRE = 'ALEXANDER';

/*B)REALIZAR UNA CONSULTA QUE PERMITA SELECCIONAR TODOS AQUELLOS PADRES CUYOS APELLIDOS COMIENZEN CON "SA"*/
SELECT * FROM TPADRE
WHERE APELLIDO LIKE 'SA%';

/*C) REALIZAR UNA CONSULTA QUE LISTE LOS PADRES CUYOS NOMBRES CONTENGAN LA LETRA "L"*/
SELECT * FROM TPADRE
WHERE NOMBRE LIKE '%L%';

/*6.- DETERMINAR FUNCIONES DE AGREGACIÓN 
A) DETERMINAR EL SUELDO TOTAL DE LOS SUELDOS BRUTOS*/
SELECT SUM(SBRUTO) AS TOTAL FROM TPADRE;

-- B) HALLAREL TOTAL DE LOS SUELDOS BRUTO
SELECT SUM(SNETO-DSCTO) AS TOTAL FROM TPADRE;

-- C) HALLAR MAXIMO SUELDO BRUTO
SELECT MAX(SBRUTO) AS 'SELDO BRUTO' FROM TPADRE;

-- D) PROMEDIO DE LOS SUELDOS BRUTO
SELECT AVG(SBRUTO) AS 'PROMEDIO' FROM TPADRE;

/*E) PROMEDIO DE LOS PADRES Y ESTUDIANTES 
-- NOTA : NO EXISTE EL ATRIBUTO EDAD EN LA TABLA PADRE*/
SELECT AVG(EDAD) AS 'PROMEDIO EDAD', 'ESTUDIANTE' AS IDENTIFICACION
FROM TESTUDIANTE;

-- F) LISTAR EL TOTAL DE PERSONAS REGISTRADAS
SELECT COUNT (ID_PADRE) AS TOTAL FROM TPADRE;

-- G) NOMBRE DEL ESTUDIANTE QUE TIENE MAYOR EDAD
SELECT MAX(EDAD) AS EDAD FROM TESTUDIANTE;

-- H) CONTAR EL NUMERO DE PERSONAS QUE TENGAN EL MISMO APELLIDO
SELECT APELLIDO, COUNT (APELLIDO) AS 'REPETICIONES' FROM TPADRE
GROUP BY APELLIDO;

